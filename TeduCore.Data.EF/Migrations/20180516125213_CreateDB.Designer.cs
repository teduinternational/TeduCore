// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TeduCore.Data.EF;
using TeduCore.Data.Enums;
using TeduCore.Infrastructure.Enums;

namespace TeduCore.Data.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180516125213_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Advertistment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<Guid>("PositionId");

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Advertistments");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AdvertistmentPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("UniqueCode");

                    b.HasKey("Id");

                    b.ToTable("AdvertistmentPages");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AdvertistmentPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<Guid>("PageId");

                    b.HasKey("Id");

                    b.ToTable("AdvertistmentPositions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasMaxLength(250);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("OwnerId");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AnnouncementUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AnnouncementId");

                    b.Property<bool?>("HasRead");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AnnouncementUsers");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Avatar");

                    b.Property<decimal>("Balance");

                    b.Property<DateTime?>("BirthDay");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<int>("Status");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrowserInfo");

                    b.Property<string>("ClientIpAddress");

                    b.Property<string>("ClientName");

                    b.Property<string>("CustomData");

                    b.Property<string>("Exception");

                    b.Property<int>("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<Guid?>("ImpersonatorTenantId");

                    b.Property<Guid?>("ImpersonatorUserId");

                    b.Property<string>("MethodName");

                    b.Property<string>("Parameters");

                    b.Property<string>("ServiceName");

                    b.Property<Guid?>("TenantId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ContactDetail", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<double?>("Lat");

                    b.Property<double?>("Lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Other");

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<string>("Website")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1")
                        .HasMaxLength(128);

                    b.Property<string>("Address2")
                        .HasMaxLength(128);

                    b.Property<string>("City")
                        .HasMaxLength(128);

                    b.Property<string>("Company")
                        .HasMaxLength(40);

                    b.Property<Guid>("CountryId");

                    b.Property<string>("CustomField");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("FirstName")
                        .HasMaxLength(32);

                    b.Property<string>("LastName")
                        .HasMaxLength(32);

                    b.Property<string>("PostCode")
                        .HasMaxLength(10);

                    b.Property<Guid>("ZoneId");

                    b.HasKey("Id");

                    b.ToTable("EComAddress");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeGroupId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComAttributes");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.AttributeDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("EComAttributeDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.AttributeGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComAttributeGroups");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.AttributeGroupDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeGroupId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("EComAttributeGroupDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime>("DateStart");

                    b.Property<decimal>("Discount");

                    b.Property<bool>("Logged");

                    b.Property<bool>("Shipping");

                    b.Property<int>("Status");

                    b.Property<decimal>("Total");

                    b.Property<string>("Type")
                        .HasMaxLength(20);

                    b.Property<int>("UsesCustomer");

                    b.Property<int>("UsesTotal");

                    b.HasKey("Id");

                    b.ToTable("EComCoupons");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CouponCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CouponId");

                    b.Property<Guid>("ProductCategoryId");

                    b.HasKey("Id");

                    b.ToTable("EComCouponCategorys");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CouponDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CouponId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("EComCouponDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CouponHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("CouponId");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("OrderId");

                    b.HasKey("Id");

                    b.ToTable("EComCouponHistorys");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CouponProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CouponId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComCouponProducts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(3);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DecimalPlace")
                        .HasMaxLength(10);

                    b.Property<int>("Status");

                    b.Property<string>("SymbolLeft")
                        .HasMaxLength(12);

                    b.Property<string>("SymbolRight")
                        .HasMaxLength(12);

                    b.Property<string>("Title")
                        .HasMaxLength(32);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComCurrencies");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AddressId");

                    b.Property<string>("Cart");

                    b.Property<string>("Code")
                        .HasMaxLength(40);

                    b.Property<string>("CustomField");

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("FirstName")
                        .HasMaxLength(32);

                    b.Property<string>("IP");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("LastName")
                        .HasMaxLength(32);

                    b.Property<bool>("NewsLetter");

                    b.Property<string>("Password")
                        .HasMaxLength(100);

                    b.Property<bool>("Safe");

                    b.Property<string>("Salt")
                        .HasMaxLength(10);

                    b.Property<int>("Status");

                    b.Property<Guid>("StoreId");

                    b.Property<string>("Telephone")
                        .HasMaxLength(32);

                    b.Property<string>("Token");

                    b.Property<string>("Wishlist");

                    b.HasKey("Id");

                    b.ToTable("EComCustomers");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("Data");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Ip")
                        .HasMaxLength(40);

                    b.Property<string>("Key")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("EComCustomerActivities");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Ip")
                        .HasMaxLength(40);

                    b.Property<int>("Total");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerLogins");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerOnline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Ip");

                    b.Property<string>("Referer");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerOnlines");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerReward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<Guid>("OrderId");

                    b.Property<int>("Points");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerRewards");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerSearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<string>("Ip")
                        .HasMaxLength(40);

                    b.Property<string>("Keyword")
                        .HasMaxLength(256);

                    b.Property<Guid>("LanguageId");

                    b.Property<Guid>("ProductCategoryId");

                    b.Property<int>("Products");

                    b.Property<Guid>("StoreId");

                    b.Property<bool>("SubCategory");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerSearchs");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<Guid>("OrderId");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerTransactions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomerWishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComCustomerWishlists");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Location")
                        .HasMaxLength(10);

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<string>("Type")
                        .HasMaxLength(32);

                    b.Property<string>("Validation")
                        .HasMaxLength(255);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComCustomFields");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomFieldCustomerGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomFieldId");

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<bool>("Required");

                    b.HasKey("Id");

                    b.ToTable("EComCustomFieldCustomerGroups");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomFieldDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomFieldId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EComCustomFieldDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomFieldValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomFieldId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComCustomFieldValues");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.CustomFieldValueDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomFieldId");

                    b.Property<Guid>("CustomFieldValueId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("EComCustomFieldValueDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Filter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FilterGroupId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComFilters");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.FilterDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FilterGroupId");

                    b.Property<Guid>("FilterId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("EComFilterDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.FilterGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComFilterGroups");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.FilterGroupDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FilterGroupId");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("EComFilterGroupDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.LengthClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComLengthClass");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.LengthClassDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LanguageId");

                    b.Property<Guid>("LengthClassId");

                    b.Property<string>("Title")
                        .HasMaxLength(32);

                    b.Property<string>("Unit")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("EComLengthClassDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SortOrder");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("EComOptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OptionDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid>("OptionId");

                    b.HasKey("Id");

                    b.ToTable("EComOptionDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OptionValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(128);

                    b.Property<Guid>("OptionId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComOptionValues");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OptionValueDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<Guid>("OptionId");

                    b.Property<Guid>("OptionValueId");

                    b.HasKey("Id");

                    b.ToTable("EComOptionValueDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcceptLanguage")
                        .HasMaxLength(255);

                    b.Property<Guid>("AffiliateId");

                    b.Property<string>("Comment");

                    b.Property<decimal>("Commission");

                    b.Property<string>("CurrencyCode");

                    b.Property<Guid>("CurrencyId");

                    b.Property<decimal>("CurrencyValue");

                    b.Property<string>("CustomField");

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("FirstName")
                        .HasMaxLength(32);

                    b.Property<string>("FowardedIp")
                        .HasMaxLength(40);

                    b.Property<int>("InvoiceNo");

                    b.Property<string>("InvoicePrefix");

                    b.Property<string>("Ip")
                        .HasMaxLength(40);

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("LastName")
                        .HasMaxLength(32);

                    b.Property<Guid>("MarketingId");

                    b.Property<Guid>("OrderStatusId");

                    b.Property<string>("PaymentAddress1")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentAddress2")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentAddressFormat");

                    b.Property<string>("PaymentCity")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentCompany")
                        .HasMaxLength(60);

                    b.Property<string>("PaymentCountry")
                        .HasMaxLength(128);

                    b.Property<Guid>("PaymentCountryId");

                    b.Property<string>("PaymentCustomField");

                    b.Property<string>("PaymentFirstName")
                        .HasMaxLength(32);

                    b.Property<string>("PaymentLastName")
                        .HasMaxLength(32);

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentPostCode")
                        .HasMaxLength(10);

                    b.Property<string>("PaymentZone")
                        .HasMaxLength(128);

                    b.Property<Guid>("PaymentZoneId");

                    b.Property<string>("ShippingAddress1")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingAddress2")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingAddressFormat");

                    b.Property<string>("ShippingCity")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingCode")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingCompany")
                        .HasMaxLength(32);

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(128);

                    b.Property<Guid>("ShippingCountryId");

                    b.Property<string>("ShippingCustomField");

                    b.Property<string>("ShippingFirstName")
                        .HasMaxLength(32);

                    b.Property<string>("ShippingLastName")
                        .HasMaxLength(32);

                    b.Property<string>("ShippingMethod")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingPostCode")
                        .HasMaxLength(10);

                    b.Property<string>("ShippingZone")
                        .HasMaxLength(128);

                    b.Property<Guid>("ShippingZoneId");

                    b.Property<Guid>("StoreId");

                    b.Property<string>("StoreName")
                        .HasMaxLength(64);

                    b.Property<string>("StoreUrl")
                        .HasMaxLength(255);

                    b.Property<string>("Telephone")
                        .HasMaxLength(32);

                    b.Property<decimal>("Total");

                    b.Property<string>("Tracking")
                        .HasMaxLength(64);

                    b.Property<string>("UserAgent")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("EComOrders");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<bool>("Notify");

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("OrderStatusId");

                    b.HasKey("Id");

                    b.ToTable("EComOrderHistories");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("OrderProductId");

                    b.Property<Guid>("ProductOptionId");

                    b.Property<Guid>("ProductOptionValueId");

                    b.Property<string>("Type")
                        .HasMaxLength(32);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComOrderOptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Model")
                        .HasMaxLength(64);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<Guid>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int>("Reward");

                    b.Property<decimal>("Tax");

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.ToTable("EComOrderProducts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderRecurring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<int>("ProductQuantity");

                    b.Property<int>("RecurringCycle");

                    b.Property<string>("RecurringDescription")
                        .HasMaxLength(255);

                    b.Property<int>("RecurringDuration");

                    b.Property<string>("RecurringFrequency")
                        .HasMaxLength(25);

                    b.Property<Guid>("RecurringId");

                    b.Property<string>("RecurringName")
                        .HasMaxLength(255);

                    b.Property<decimal>("RecurringPrice");

                    b.Property<string>("Reference")
                        .HasMaxLength(255);

                    b.Property<int>("Status");

                    b.Property<int>("Trial");

                    b.Property<int>("TrialCycle");

                    b.Property<int>("TrialDuration");

                    b.Property<string>("TrialFrequency");

                    b.Property<decimal>("TrialPrice");

                    b.HasKey("Id");

                    b.ToTable("EComOrderRecurrings");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderRecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("OrderRecurringId");

                    b.Property<string>("Reference")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("EComOrderRecurringTransactions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderShipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("ShippingCourierId");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("EComOrderShipments");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("EComOrderStatus");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderTotal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid>("OrderId");

                    b.Property<int>("SortOrder");

                    b.Property<string>("Title");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComOrderTotals");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.OrderVoucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Code")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("FromEmail")
                        .HasMaxLength(200);

                    b.Property<string>("FromName")
                        .HasMaxLength(64);

                    b.Property<string>("Message");

                    b.Property<Guid>("OrderId");

                    b.Property<string>("ToEmail")
                        .HasMaxLength(200);

                    b.Property<string>("ToName")
                        .HasMaxLength(64);

                    b.Property<Guid>("VoucherId");

                    b.Property<Guid>("VoucherThemeId");

                    b.HasKey("Id");

                    b.ToTable("EComOrderVouchers");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAvailable");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Ean")
                        .HasMaxLength(14);

                    b.Property<decimal>("Height");

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<string>("Isbn")
                        .HasMaxLength(17);

                    b.Property<string>("Jan")
                        .HasMaxLength(13);

                    b.Property<decimal>("Length");

                    b.Property<Guid>("LengthClassId");

                    b.Property<string>("Location")
                        .HasMaxLength(128);

                    b.Property<Guid>("ManufacturerId");

                    b.Property<int>("Minimum");

                    b.Property<string>("Model")
                        .HasMaxLength(64);

                    b.Property<string>("Mpn")
                        .HasMaxLength(64);

                    b.Property<int>("Points");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<bool>("Shipping");

                    b.Property<string>("Sku")
                        .HasMaxLength(64);

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<Guid>("StockStatusId");

                    b.Property<bool>("Subtract");

                    b.Property<Guid>("TaxClassId");

                    b.Property<string>("Upc")
                        .HasMaxLength(12);

                    b.Property<int>("Viewed");

                    b.Property<decimal>("Weight");

                    b.Property<Guid>("WeightClassId");

                    b.Property<decimal>("Width");

                    b.HasKey("Id");

                    b.ToTable("EComProducts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<Guid>("LanguageId");

                    b.Property<Guid>("ProductId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("EComProductAttributes");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentIdentity");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("HomeFlag");

                    b.Property<int?>("HomeOrder");

                    b.Property<string>("Image")
                        .HasMaxLength(256);

                    b.Property<Guid?>("ParentId");

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("EComProductCategories");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategoryDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<Guid>("ProductCategoryId");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(255);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(255);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(255);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("EComProductCategoryDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategoryFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FilterId");

                    b.Property<Guid>("ProductCategoryId");

                    b.HasKey("Id");

                    b.ToTable("EComProductCategoryFilters");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategoryPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Level");

                    b.Property<Guid>("Path");

                    b.Property<Guid>("ProductCategoryId");

                    b.HasKey("Id");

                    b.ToTable("EComProductCategoryPaths");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategoryToLayout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LayoutId");

                    b.Property<Guid>("ProductCategoryId");

                    b.Property<Guid>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("EComProductCategoryToLayouts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductCategoryToStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductCategoryId");

                    b.Property<Guid>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("EComProductCategoryToStores");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<Guid>("ProductId");

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(255);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(255);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(255);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(255);

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.ToTable("EComProductDescriptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<decimal>("Price");

                    b.Property<int>("Priority");

                    b.Property<Guid>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("EComProductDiscounts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FilterId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComProductFilters");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption")
                        .HasMaxLength(250);

                    b.Property<string>("Path")
                        .HasMaxLength(250);

                    b.Property<Guid>("ProductId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("EComProductImages");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("OptionId");

                    b.Property<Guid>("ProductId");

                    b.Property<bool>("Required");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("EComProductOptions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductOptionValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("OptionId");

                    b.Property<Guid>("OptionValueId");

                    b.Property<int>("Points");

                    b.Property<string>("PointsPrefix")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<decimal>("Price");

                    b.Property<string>("PricePrefix")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("ProductOptionId");

                    b.Property<int>("Quantity");

                    b.Property<bool>("Subtract");

                    b.Property<decimal>("Weight");

                    b.Property<string>("WeightPrefix")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("EComProductOptionValues");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductRecurring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("RecurringId");

                    b.HasKey("Id");

                    b.ToTable("EComProductRecurrings");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductRelated", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("RelatedId");

                    b.HasKey("Id");

                    b.ToTable("EComProductRelateds");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductReward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<int>("Points");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComProductRewards");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductSpecial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerGroupId");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<decimal>("Price");

                    b.Property<int>("Priority");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComProductSpecials");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductToCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductCategoryId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("EComProductToCategories");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductToLayout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LayoutId");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("EComProductToLayouts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ECommerce.ProductToStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("StoreId");

                    b.HasKey("Id");

                    b.ToTable("EComProductToStores");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<string>("Message")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Footer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Function", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CssClass");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("ParentList");

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<string>("UniqueCode");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDefault");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Resources");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<string>("Content");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("SeoAlias");

                    b.Property<string>("SeoDescription");

                    b.Property<string>("SeoKeywords");

                    b.Property<string>("SeoPageTitle");

                    b.Property<int>("Status");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FunctionId")
                        .HasMaxLength(128);

                    b.Property<Guid>("RoleId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("HomeFlag");

                    b.Property<bool?>("HotFlag");

                    b.Property<string>("Image")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("SeoAlias")
                        .HasMaxLength(256);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(256);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(256);

                    b.Property<string>("SeoPageTitle")
                        .HasMaxLength(256);

                    b.Property<int>("Status");

                    b.Property<string>("Tags");

                    b.Property<int?>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.PostTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("PostId");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ProductTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ProductId");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.ProductWishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ProductWishlists");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<bool?>("BooleanValue");

                    b.Property<DateTime?>("DateValue");

                    b.Property<decimal?>("DecimalValue");

                    b.Property<int?>("IntegerValue");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int>("Status");

                    b.Property<string>("TextValue");

                    b.Property<string>("UniqueCode");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Slide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int?>("DisplayOrder");

                    b.Property<int>("GroupAlias");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("TeduCore.Data.Entities.Tag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
